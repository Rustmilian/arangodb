diff --git a/src/torque/torque-compiler.cc b/src/torque/torque-compiler.cc
index 579494f8..2cf5c952 100644
--- a/src/torque/torque-compiler.cc
+++ b/src/torque/torque-compiler.cc
@@ -5,6 +5,7 @@
 #include "src/torque/torque-compiler.h"
 
 #include <fstream>
+#include <iostream>
 #include "src/torque/declarable.h"
 #include "src/torque/declaration-visitor.h"
 #include "src/torque/global-context.h"
@@ -30,6 +31,7 @@ void ReadAndParseTorqueFile(const std::string& path) {
   SourceId source_id = SourceFileMap::AddSource(path);
   CurrentSourceFile::Scope source_id_scope(source_id);
 
+  std::cerr << "READANDPARSETORQUEFILE: " << path << ", ABSOLUTEPATH: " << SourceFileMap::AbsolutePath(source_id) << ", SFM PATHFROMV8ROOT: " << SourceFileMap::PathFromV8Root(source_id) << std::endl;
   // path might be either a normal file path or an encoded URI.
   auto maybe_content = ReadFile(SourceFileMap::AbsolutePath(source_id));
   if (!maybe_content) {
@@ -140,6 +142,7 @@ TorqueCompilerResult CompileTorque(const std::string& source,
 
 TorqueCompilerResult CompileTorque(std::vector<std::string> files,
                                    TorqueCompilerOptions options) {
+  std::cerr << "COMPILETORQUE CALLED WITH V8ROOT: " << options.v8_root << std::endl;
   SourceFileMap::Scope source_map_scope(options.v8_root);
   CurrentSourceFile::Scope unknown_source_file_scope(SourceId::Invalid());
   CurrentAst::Scope ast_scope;
diff --git a/src/torque/torque.cc b/src/torque/torque.cc
index 7ccc5bf9..b32a448f 100644
--- a/src/torque/torque.cc
+++ b/src/torque/torque.cc
@@ -5,6 +5,8 @@
 #include "src/torque/source-positions.h"
 #include "src/torque/torque-compiler.h"
 
+#include <regex>
+
 namespace v8 {
 namespace internal {
 namespace torque {
@@ -23,6 +25,7 @@ int WrappedMain(int argc, const char** argv) {
   options.collect_language_server_data = false;
   options.force_assert_statements = false;
 
+  std::regex re("/gypfiles/");
   std::vector<std::string> files;
 
   for (int i = 1; i < argc; ++i) {
@@ -32,6 +35,7 @@ int WrappedMain(int argc, const char** argv) {
       options.output_directory = argv[++i];
     } else if (argument == "-v8-root") {
       options.v8_root = std::string(argv[++i]);
+      std::cerr << "TORQUE COMPILER: GOT V8-ROOT OPTION: " << options.v8_root << std::endl;
     } else if (argument == "-m32") {
 #ifdef V8_COMPRESS_POINTERS
       std::cerr << "Pointer compression is incompatible with -m32.\n";
@@ -44,6 +48,11 @@ int WrappedMain(int argc, const char** argv) {
     } else if (argument == "-strip-v8-root") {
       options.strip_v8_root = true;
     } else {
+
+      std::cerr << "TORQUE COMPILER: GOT FILE ARGUMENT: " << argument << std::endl;
+      argument = std::regex_replace(argument, re, "/v8/");
+      std::cerr << "TORQUE COMPILER: NEW FILE ARGUMENT: " << argument << std::endl;
+
       // Strip the v8-root in case it is a prefix of the file path itself.
       // This is used when building in Google3.
       if (options.strip_v8_root &&
