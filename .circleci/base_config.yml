version: 2.1

jobs:
  compile-linux:
    parameters:
      preset:
        type: string
      edition:
        type: string
    docker:
      - image: arangodb/build-alpine-x86_64:3.16-gcc11.2-openssl1.1.1s
    resource_class: xlarge
    environment:
      GIT_SSH_COMMAND: ssh -v
      SCCACHE_ERROR_LOG: /tmp/sccache.log
      SCCACHE_LOG: info,sccache::cache=debug
    steps:
      - run:
          name: Checkout
          command: |
            git clone --depth 1 https://github.com/arangodb/arangodb.git --branch "$CIRCLE_BRANCH" --recurse-submodules --shallow-submodules -j 8 /root/project
            git reset --hard "$CIRCLE_SHA1"
      - run:
          name: Print SCCache Settings
          command: sccache -s
      # - restore_cache:
      #     keys:
      #       #- sccache-v1-<< parameters.edition >>-{{ .Branch }}-{{ .Revision }}
      #       - sccache-v1-<< parameters.edition >>-{{ .Branch }}
      #       - sccache-v1-<< parameters.edition >>
      # - run:
      #     name: Zero CCache Statistics
      #     command: ccache -z
      - run:
          name: Configure
          command: |
            cmake --preset << parameters.preset >> -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_EXE_LINKER_FLAGS="-fuse-ld=lld"
      - run:
          name: Build
          command: |
            cmake --build --preset << parameters.preset >> --parallel 8 --target arangodbtests arangod arangosh arangoimport arangoexport arangodump arangorestore arangobench fuertetest
            cat /tmp/sccache.log
      - run:
          command: |
            rm build/<< parameters.preset >>/bin/*.a
            ls -la build/<< parameters.preset >>/bin/
      - run:
          name: SCCache Statistics
          command: sccache -s
      - store_artifacts:
          path: build/<< parameters.preset >>/bin/arango*
      # - save_cache:
      #     when: always
      #     key: sccache-v1-<< parameters.edition >>-{{ .Branch }}-{{ checksum "build/<< parameters.preset >>/bin/arangod" }}
      #     paths:
      #       - /root/.cache/sccache
      - persist_to_workspace:
          root: .
          paths:
            - CMakePresets.json
            - build/<< parameters.preset >>/bin
            - scripts/
            - js/
            - etc/
            - tests/js
            - utils
            - UnitTests

  run-ctest:
    parameters:
      filter:
        type: string
      preset:
        type: string
    docker:
      - image: arangodb/build-alpine-x86_64:3.16-gcc11.2-openssl1.1.1s
    resource_class: large
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Enabled coredumps
          command: ulimit -c unlimited
      - run:
          name: Run CTest
          command: |
            ctest --preset << parameters.preset >> -R << parameters.filter >>
      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* /tmp/core_dumps
          when: on_fail
      - store_artifacts:
          path: /tmp/core_dumps
      - store_test_results:
          path: test_detail.xml

  run-js-tests:
    docker:
      - image: cimg/base:2022.12
    parameters:
      suiteName:
        type: string
      suites:
        type: string
      size:
        type: string
      extraArgs:
        type: string
        default: ""
      buckets:
        type: integer
        default: 1
      cluster:
        type: boolean
    resource_class: << parameters.size >>
    parallelism: << parameters.buckets >>
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Enabled coredumps
          command: ulimit -c unlimited
      - run:
          name: Run << parameters.suiteName >> tests
          command: |
            scripts/unittest << parameters.suites >> --cleanup false --writeXmlReport true --dumpAgencyOnError true --testBuckets $CIRCLE_NODE_TOTAL/$CIRCLE_NODE_INDEX --cluster << parameters.cluster >> << parameters.extraArgs >>
      # - run:
      #     command: |
      #       mkdir test-results && cp ./out/*.xml test-results
      - run:
          command: |
            mkdir -p /tmp/core_dumps
            cp core.* /tmp/core_dumps
          when: on_fail
      - store_artifacts:
          destination: << parameters.suiteName >>
          path: ./out/
      - store_test_results:
          path: ./out/

workflows:
  devel-pr:
    when:
      matches:
        pattern: /^(bug-fix|feature|chore)\/.*$/
        value: << pipeline.git.branch >>
    jobs:
      - compile-linux:
          name: build-community-pr
          preset: community-pr
          edition: x64-community
      - run-ctest:
          name: arangodbtests-non-iresearch
          preset: community-pr
          filter: "arangodbtests-non-iresearch"
          requires:
            - build-community-pr
      - run-ctest:
          name: arangodbtests-iresearch
          preset: community-pr
          filter: "arangodbtests-iresearch"
          requires:
            - build-community-pr
